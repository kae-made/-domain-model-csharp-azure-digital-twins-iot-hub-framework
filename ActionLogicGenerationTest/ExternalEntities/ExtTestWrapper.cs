// ------------------------------------------------------------------------------
// <auto-generated>
//     This file is generated by tool.
//     Runtime Version : 1.0.0
//  
//     Updates this file cause incorrect behavior 
//     and will be lost when the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using Kae.StateMachine;
using Kae.DomainModel.Csharp.Framework;
using Kae.Utility.Logging;

namespace ActionLogicGenerationTest.ExternalEntities
{
    public abstract class ExtTestWrapper : ExternalEntityDef
    {
        protected static readonly string eeKeyLetter = "ExtTest";
        public string EEKey { get { return eeKeyLetter; } }

        protected Logger logger;
        public Logger Logger { get { return logger; } set { logger = value; } }

        protected List<string> configuration = new List<string>();
        public IList<string> ConfigurationKeys { get { return configuration; } }
        public abstract void Test();

        public void Initialize(IDictionary<string, object> configuration)
        {
            InitializeImpl(configuration);
        }

        protected abstract void InitializeImpl(IDictionary<string, object> configuration);
    }

#if IMPLEMENTATION
    // Generated part for implementation
    // Please create another C# project and copy this file into the project, remove directive and write code.
    public static class ExtTestExternalEntityEntry
    {
        public static ExtTestWrapper GetInstance(Logger logger)
        {
           return new ExtTestImpl() { Logger= logger };
        }
    }

    internal class ExtTestImpl : ExtTestWrapper
    {
        public ExtTestImpl()
        {
            // please add configuration keys into 'ExtTestWrapper.configuration' if necessary
        }

        protected override void InitializeImpl(IDictionary<string, object> configuration)
        {
            // please write implementation
        }

        public override void Test()
        {
            // please write implementation
        }
    }

#endif
}
